service: ${self:custom.baseDomain}-${self:custom.subDomain}

frameworkVersion: '>=1.0.0 <2.0.0'

custom:
  baseDomain: toy
  subDomain: project
  currentVars:
    tableName: toyProject-board-${self:provider.stage}
  dynamodb:
    stages:
      - local
    start:
      port: 4000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      dev:
        sources:
          - table: ${self:custom.currentVars.tableName}
            sources: [./data/board.json]

package:
  exclude:
    - "*/**"
  include:
    - "functions/**"
    - "infra/**"
    - "models/**"
    - "services/**"
    - "utils/**"
    - "node_modules/bcryptjs/**"
    - "node_modules/buffer-equal-constant-time/**"
    - "node_modules/dynamodb-toolbox/**"
    - "node_modules/ecdsa-sig-formatter/**"
    - "node_modules/jsonwebtoken/**"
    - "node_modules/jwa/**"
    - "node_modules/jws/**"
    - "node_modules/lodash*/**"
    - "node_modules/moment*/**"
    - "node_modules/ms/**"
    - "node_modules/safe-buffer/**"
    - "node_modules/semver/**"
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'ap-northeast-2'}
  memorySize: 128
  deploymentBucket:
    name: com.nsmall.serverless.${self:provider.region}.deploys
    maxPreviousDeploymentArtifacts: 10
    blockPublicAccess: true
    serverSideEncrytion: AES256
  endpointType: regional
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
  environment:
    STAGE: ${self:provider.stage}
    BOARD_TABLE: ${self:custom.currentVars.tableName}
    AUTH_SECRET: 
  tracing:
    apiGateway: true
    lambda: true

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  # REST API
  - ${file(./functions/api/rest/createUser/function.yml)}
  - ${file(./functions/api/rest/loginUser/function.yml)}
  - ${file(./functions/api/rest/logoutUser/function.yml)}
  - ${file(./functions/api/rest/authUser/function.yml)}
  # - ${file(./functions/api/rest/getUser/function.yml)}
  # - ${file(./functions/api/rest/updateUser/function.yml)}
  # - ${file(./functions/api/rest/getProfileUser/function.yml)}

resources:
  # DynamoDB
  - ${file(./infra/dynamodb/boardTable.yml)}