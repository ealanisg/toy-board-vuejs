service: ${self:custom.baseDomain}-${self:custom.subDomain}

custom:
  baseDomain: toy
  subDomain: project
  currentStage: ${opt:stage, self:provider.stage}
  currentRegion: ${opt:region, self:provider.region}
  currentVars:
    bucketName: nsm-${self:custom.currentStage}-serverless-bucket
    tableName: toyProject-board-${self:custom.currentStage}
  environment:
    STAGE: ${self:custom.currentStage}
    BOARD_TABLE: ${self:custom.currentVars.tableName}

  dynamodb:
    stages:
      - local
    start:
      port: 4000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      dev:
        sources:
          - table: ${self:custom.currentVars.tableName}
            sources: [./data/board.json]

provider:
  name: aws
  runtime: nodejs12.x
  stage: local
  region: ap-northeast-2
  deploymentBucket:
    name: ${self:custom.currentVars.bucketName}
    serverSideEncrytion: AES256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:custom.currentRegion}:*:table/*"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  # REST API
  - ${file(./functions/api/rest/createUser/function.yml)}
  # - ${file(./functions/api/rest/getUser/function.yml)}
  # - ${file(./functions/api/rest/loginUser/function.yml)}
  # - ${file(./functions/api/rest/updateUser/function.yml)}
  # - ${file(./functions/api/rest/getProfileUser/function.yml)}

resources:
  # DynamoDB
  - ${file(./infra/dynamodb/boardTable.yml)}